// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Upward.Models.Database;

namespace Upward.Migrations
{
    [DbContext(typeof(upwardContext))]
    [Migration("20171104180824_RemoveVersion")]
    partial class RemoveVersion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("Upward.Models.Database.Pkgapikey", b =>
                {
                    b.Property<Guid>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("key")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasMaxLength(255);

                    b.Property<int>("Project")
                        .HasColumnName("project");

                    b.HasKey("Key");

                    b.ToTable("pkgapikey");
                });

            modelBuilder.Entity("Upward.Models.Database.Pkgfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<string[]>("Filename")
                        .IsRequired()
                        .HasColumnName("filename")
                        .HasColumnType("varchar(255)[]");

                    b.Property<string>("Label")
                        .HasColumnName("label")
                        .HasMaxLength(39);

                    b.Property<int>("Major")
                        .HasColumnName("major");

                    b.Property<int>("Minor")
                        .HasColumnName("minor");

                    b.Property<int>("Patch")
                        .HasColumnName("patch");

                    b.Property<int>("Project")
                        .HasColumnName("project");

                    b.Property<string[]>("Sha256")
                        .IsRequired()
                        .HasColumnName("sha256")
                        .HasColumnType("varchar(64)[]");

                    b.HasKey("Id");

                    b.ToTable("pkgfile");
                });

            modelBuilder.Entity("Upward.Models.Database.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasMaxLength(39);

                    b.Property<bool>("Private")
                        .HasColumnName("private");

                    b.Property<int>("Userid")
                        .HasColumnName("userid");

                    b.HasKey("Id");

                    b.ToTable("project");
                });

            modelBuilder.Entity("Upward.Models.Database.Userprofile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("created")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("email")
                        .HasMaxLength(320);

                    b.Property<int>("GithubId")
                        .HasColumnName("githubid");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnName("password")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("userprofile");
                });
#pragma warning restore 612, 618
        }
    }
}
